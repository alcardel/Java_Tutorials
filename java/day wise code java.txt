Day 2-->
---------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------
ex1--> Assignment operators

class HelloWorld {
    public static void main(String[] args) {
        int a=12,b=5;
        System.out.println(a+" + "+b+" = "+(a+b));
        System.out.println(a+" - "+b+" = "+(a-b));
        System.out.println(a+" * "+b+" = "+(a*b));
        System.out.println(a+" / "+b+" = "+(a/b));
        System.out.println(a+" % "+b+" = "+(a%b));
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------
output::
12 + 5 = 17
12 - 5 = 7
12 * 5 = 60
12 / 5 = 2
12 % 5 = 2

---------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------
ex 2 Shorthand Operators

class HelloWorld {
    public static void main(String[] args) {
        int a=5,var=a;
        System.out.println("var+=a :: "+(var+=a));
        System.out.println("var-=a :: "+(var-=a));
        System.out.println("var*=a :: "+(var*=a));
        System.out.println("var/=a :: "+(var/=a));
        System.out.println("var%=a :: "+(var%=a));
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------
output::
var+=a :: 10
var-=a :: 5
var*=a :: 25
var/=a :: 5
var%=a :: 0
---------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------
ex 3 Relational operators

class HelloWorld {
    public static void main(String[] args) {
        int a=5,b=12;
        System.out.println("a :: "+a+" b ::"+b);
        System.out.println("a==b :: "+(a==b));
        System.out.println("a!=b :: "+(a!=b));
        System.out.println("a>b  :: "+(a>b));
        System.out.println("a<b  :: "+(a<b));
        System.out.println("a<=b :: "+(a<=b));
        System.out.println("a>=b :: "+(a>=b));
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------
output::
a :: 5 b ::12
a==b :: false
a!=b :: true
a>b  :: false
a<b  :: true
a<=b :: true
a>=b :: false
---------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------
ex 4:: AND \\ OR Operations
public class Main
{
        public static void main(String[] args) {
         System.out.println("(5>3) && (8>5) :: "+((5>3) && (8>5)));
        System.out.println("(5>3) && (8<5) :: "+((5>3) && (8<5)));
        System.out.println("(5<3) && (8<5) :: "+((5<3) && (8<5)));
        System.out.println("(5>3) || (8>5) :: "+((5>3) || (8>5)));
        System.out.println("(5>3) || (8<5) :: "+((5>3) || (8<5)));
        System.out.println("!(5==3) :: "+!(5==3));
	}
}
---------------------------------------------------------------------------------------------------------------------------------------------------
note::
if the first condition in AND is false then the compiler will not check the next condition to reduce the time complexity
if the first condition in OR  is True  then the compiler will not check the next condition to reduce the time complexity
---------------------------------------------------------------------------------------------------------------------------------------------------
output::
(5>3) && (8>5) :: true
(5>3) && (8<5) :: false
(5<3) && (8<5) :: false
(5>3) || (8>5) :: true
(5>3) || (8<5) :: true
!(5==3) :: true
---------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------
exp 5:: 

public class Main
{
	public static void main(String args[]) {
	    int a=5;
    System.out.println("a :: "+a);
	System.out.println(" pre increment ::"+ ++a);
	System.out.println("a :: "+a);
	System.out.println(" post increment ::"+ a++);
	System.out.println("a :: "+a);
	System.out.println(" pre decrement ::"+ --a);
	System.out.println("a :: "+a);
	System.out.println(" post decrement ::"+ a--);
	System.out.println("a :: "+a);

	}
}
---------------------------------------------------------------------------------------------------------------------------------------------------
Output::

a :: 5
 pre increment ::6
a :: 6
 post increment ::6
a :: 7
 pre decrement ::6
a :: 6
 post decrement ::6
a :: 5

---------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------
---------------------
PATTERNS ::
--------------------
----------------------------------------------------------------------------------------------------------------------------------------------------
1) SQUARE--->

public class Main
{
	public static void main(String args[]) {
	    int i,j;
	    for (i=0;i<5;i++)
	    {
	        for (j=0;j<5;j++)
	        System.out.print(" * ");
	        System.out.println();
	    }
	    

	}
}
----------------------------------------------------------------------------------------------------------------------------------------------------
OUTPUT::

 *  *  *  *  * 
 *  *  *  *  * 
 *  *  *  *  * 
 *  *  *  *  * 
 *  *  *  *  * 
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------
2) Hollow Square 

public class Main
{
	public static void main(String[] args) {
	  int i,j,size=5;
	    for (i=0;i<5;i++)
	    {
	        for (j=0;j<5;j++){
	            if(i==0 || i==size-1)
	        System.out.print(" * ");
	        else {
	            if(j==0 || j==size-1)
	             System.out.print(" * ");
	             else 
	             System.out.print("   ");
	        }
	        }
	         System.out.println();
	        }
	       
	}
}
----------------------------------------------------------------------------------------------------------------------------------------------------
Output ::

 *  *  *  *  * 
 *           * 
 *           * 
 *           * 
 *  *  *  *  * 


----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------

3) Right angled triangle 1

public class Main
{
	public static void main(String args[]) {
	    int i,j;
	    for (i=0;i<5;i++)
	    {
	        for (j=0;j<i;j++)
	        System.out.print(" * ");
	        System.out.println();
	    }
	    

	}
}
----------------------------------------------------------------------------------------------------------------------------------------------------
Output ::

 * 
 *  * 
 *  *  * 
 *  *  *  * 
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------

4) Right angled triangle 2

public class Main
{
	public static void main(String args[]) {
	    int i,j,p;
	    for (i=5;i>0;i--)
	    {
	        for(p=3;p<0;p--)
	        System.out.print("   ");
	        for (j=1;j<i;j++)
	        System.out.print(" * ");
	        System.out.println();
	    }
	    

	}
}
----------------------------------------------------------------------------------------------------------------------------------------------------
Output ::

 *  *  *  * 
 *  *  * 
 *  * 
 * 
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------

5)  Right angled triangle 3

public class Main
{
	public static void main(String args[]) {
	    int i,j,p ,s=5;
	    for (i=0;i<s;i++)
	    {
	        for(p=1;p<s-i;p++)
	        System.out.print("   ");
	        
	        for (j=0;j<=i;j++)
	        System.out.print(" * ");
	        
	        System.out.println();
	    }
	    

	}
}
----------------------------------------------------------------------------------------------------------------------------------------------------
Output ::

             * 
          *  * 
       *  *  * 
    *  *  *  * 
 *  *  *  *  *


----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------
6)  Equilateral Trigangle

public class Main
{
	public static void main(String args[]) {
	    int i,j,p ,s=5;
	    for (i=0;i<s;i++)
	    {
	        for(p=1;p<s-i;p++)
	        System.out.print(" ");
	        
	        for (j=0;j<=i;j++)
	        System.out.print("* ");// [*  ] 
	        
	        System.out.println();
	    }
	    

	}
}
----------------------------------------------------------------------------------------------------------------------------------------------------
Output ::

    * 
   * * 
  * * * 
 * * * * 
* * * * * 


----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------
DAY 3::

1) Pallindrome number

public class Main
{
	public static void main(String[] args) {
	 int num=3553,rem=0,rnum=0,n=num;
        while(num!=0)
        {
            rem=num%10;
            rnum=rnum*10+rem;
            num/=10;
           // System.out.println(rem);
           // System.out.println(rnum);
           // System.out.println(num);
        }
        if(rnum==n)
            System.out.println("Number is pallindrome");
        else
        System.out.println("Number is not pallindrome");
        }
    }
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------

2) Arrays:: New Keyword

public class Main
{
	public static void main(String[] args) {
	 int a[]=new int[20];
	 a[0]=1;
	 a[1]=2;
	 a[3]=4;
	 a[4]=5;
	 a[5]=6;
	 
	 //a={1,2,3,4,5,6,7,8,9,10};
	 for(int i =0;i<=6;i++)
	   System.out.println("a["+i+"] = "+a[i]);
        }
    }
----------------------------------------------------------------------------------------------------------------------------------------------------
Output::
a[0] = 1
a[1] = 2
a[2] = 0
a[3] = 4
a[4] = 5
a[5] = 6
a[6] = 0
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------

3) Arrays:: Without new keyword;

public class Main
{
	public static void main(String[] args) {
	 int a[]={1,2,3,4,5,6,7,8,9,10};
	 for(int i =0;i<10;i++)
	   System.out.println("a["+i+"] = "+a[i]);
        }
    }
----------------------------------------------------------------------------------------------------------------------------------------------------
Output::
a[0] = 1
a[1] = 2
a[2] = 3
a[3] = 4
a[4] = 5
a[5] = 6
a[6] = 7
a[7] = 8
a[8] = 9
a[9] = 10
	
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------

4)Arrays printing :: Using 'For Each 'syntax

Syntax:: for(int i :arrayname)
	   System.out.println(i);

----------------------------------------------------------------------------------------------------------------------------------------------------
public class Main
{
	public static void main(String[] args) {
	 int a[]={1,2,3,8,5,6,7,8,9,10};
	 for(int i :a)
	   System.out.println(i);
        }
    }

----------------------------------------------------------------------------------------------------------------------------------------------------	
Output::
1
2
3
8
5
6
7
8
9
10

----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------
5) Arrays Min Element


public class Main
{
    static void min(int a[])
    {
        int min =a[0];
        for (int i:a){
        if(min>i)
        min=i;
    }
    System.out.println("Min is ::"+min);
    }
	public static void main(String[] args) {
	 int a[]={26,6,8,1,30};
      min(a);
        }
    }
----------------------------------------------------------------------------------------------------------------------------------------------------

Output ::

Min is ::1 

----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------

6)Array Max Element


public class Main
{
    static void max(int a[])
    {
        int max =a[0];
        for (int i:a){
        if(max<i)
        max=i;
    }
    System.out.println("Min is ::"+max);
    }
	public static void main(String[] args) {
	 int a[]={26,6,8,1,30};
      max(a);
        }
    }
----------------------------------------------------------------------------------------------------------------------------------------------------	
Output::

Max is ::30

----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------
